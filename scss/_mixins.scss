$break-smartphone: 420px; // Maximum portrait resolution
$break-tablet: 992px; // Maximum portrait resolution
$break-laptop: 1440px; // Maximum horizontal resolution

@mixin device($media...) {
  $breakpoints: smartphone, tablet, laptop, desktop;
  $devices: ();
  $min-width: "";
  $max-width: "";

  @if length($media) > 1 {
    //Set media query using min-max viewport logic
    @if index($media, smartphone) != null {
      $devices: append($devices, index($breakpoints, smartphone), comma);
    }
    @if index($media, tablet) != null {
      $devices: append($devices, index($breakpoints, tablet), comma);
    }
    @if index($media, laptop) != null {
      $devices: append($devices, index($breakpoints, laptop), comma);
    }
    @if index($media, desktop) != null {
      $devices: append($devices, index($breakpoints, desktop), comma);
    }

    $min: min($devices...);
    $max: max($devices...);

    //set min
    @if $min == 2 { $min-width: "and (min-width: #{$break-smartphone + 1})"; }
    @else if $min == 3 { $min-width: "and (min-width: #{$break-tablet + 1})"; }

    //set max
    @if $max == 2 { $max-width: "and (max-width: #{$break-tablet})"; }
    @else if $max == 3 { $max-width: "and (max-width: #{$break-laptop})"; }

    @media only screen #{$min-width + $max-width} { @content; }

  } @else {
    //Set media query for a specific viewport
    @if nth($media,1) == smartphone {
      @media only screen and (max-width: $break-smartphone) { @content; }
    }
    @if nth($media,1) == tablet {
      @media only screen and (min-width: $break-smartphone + 1) and (max-width: $break-tablet) { @content; }
    }
    @if nth($media,1) == laptop {
      @media only screen and (min-width: $break-tablet + 1) and (max-width: $break-laptop) { @content; }
    }
    @if nth($media,1) == desktop {
      @media only screen and (min-width: $break-laptop + 1) { @content; }
    }
  }
}

@mixin word-wrap() {
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  word-break: break-word;
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}
